// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentApp.Models;

#nullable disable

namespace StudentApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250416100546_UpdateCourseRegistrationKey")]
    partial class UpdateCourseRegistrationKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentApp.Models.Course", b =>
                {
                    b.Property<string>("MaHP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Khoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KiHoc")
                        .HasColumnType("int");

                    b.Property<string>("NamHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("TenHP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHP");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("StudentApp.Models.CourseClass", b =>
                {
                    b.Property<string>("MaLHP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaGV")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhongHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SiSoToiDa")
                        .HasColumnType("int");

                    b.Property<string>("Thu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLHP");

                    b.HasIndex("MaGV");

                    b.HasIndex("MaHP");

                    b.ToTable("CourseClasses");
                });

            modelBuilder.Entity("StudentApp.Models.CourseRegistration", b =>
                {
                    b.Property<string>("MaSV")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(0);

                    b.Property<string>("MaLHP")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("NgayDK")
                        .HasColumnType("datetime2");

                    b.HasKey("MaSV", "MaLHP");

                    b.HasIndex("MaLHP");

                    b.ToTable("CourseRegistrations");
                });

            modelBuilder.Entity("StudentApp.Models.Grade", b =>
                {
                    b.Property<string>("MaDiem")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("DiemQT")
                        .HasColumnType("float");

                    b.Property<double>("DiemThi")
                        .HasColumnType("float");

                    b.Property<double>("DiemTong")
                        .HasColumnType("float");

                    b.Property<string>("MaLHP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaDiem");

                    b.HasIndex("MaLHP");

                    b.HasIndex("MaSV");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("StudentApp.Models.Schedule", b =>
                {
                    b.Property<string>("MaTKB")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaLHP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSV")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaTKB");

                    b.HasIndex("MaLHP");

                    b.HasIndex("MaSV");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("StudentApp.Models.Student", b =>
                {
                    b.Property<string>("MaSV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Khoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSV");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentApp.Models.StudyPlan", b =>
                {
                    b.Property<string>("MaKH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("HocKi")
                        .HasColumnType("int");

                    b.Property<string>("Khoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKH");

                    b.HasIndex("MaHP");

                    b.ToTable("StudyPlans");
                });

            modelBuilder.Entity("StudentApp.Models.Teacher", b =>
                {
                    b.Property<string>("MaGV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Khoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaGV");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("StudentApp.Models.TeachingSchedule", b =>
                {
                    b.Property<string>("MaLD")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaGV")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaLHP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLD");

                    b.HasIndex("MaGV");

                    b.HasIndex("MaLHP");

                    b.ToTable("TeachingSchedules");
                });

            modelBuilder.Entity("StudentApp.Models.TrainingProgram", b =>
                {
                    b.Property<string>("MaCTDT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Khoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaHP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nganh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaCTDT");

                    b.HasIndex("MaHP");

                    b.ToTable("TrainingPrograms");
                });

            modelBuilder.Entity("StudentApp.Models.CourseClass", b =>
                {
                    b.HasOne("StudentApp.Models.Teacher", "Teachers")
                        .WithMany("CourseClasses")
                        .HasForeignKey("MaGV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentApp.Models.Course", "Course")
                        .WithMany("CourseClasses")
                        .HasForeignKey("MaHP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("StudentApp.Models.CourseRegistration", b =>
                {
                    b.HasOne("StudentApp.Models.CourseClass", "CourseClasses")
                        .WithMany("CourseRegistrations")
                        .HasForeignKey("MaLHP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentApp.Models.Student", "Students")
                        .WithMany("CourseRegistrations")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CourseClasses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentApp.Models.Grade", b =>
                {
                    b.HasOne("StudentApp.Models.CourseClass", "CourseClasses")
                        .WithMany("Grades")
                        .HasForeignKey("MaLHP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentApp.Models.Student", "Students")
                        .WithMany("Grades")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CourseClasses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentApp.Models.Schedule", b =>
                {
                    b.HasOne("StudentApp.Models.CourseClass", "CourseClasses")
                        .WithMany("Schedules")
                        .HasForeignKey("MaLHP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentApp.Models.Student", "Students")
                        .WithMany("Schedules")
                        .HasForeignKey("MaSV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CourseClasses");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentApp.Models.StudyPlan", b =>
                {
                    b.HasOne("StudentApp.Models.Course", "Courses")
                        .WithMany("StudyPlans")
                        .HasForeignKey("MaHP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("StudentApp.Models.TeachingSchedule", b =>
                {
                    b.HasOne("StudentApp.Models.Teacher", "Teachers")
                        .WithMany("TeachingSchedules")
                        .HasForeignKey("MaGV")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StudentApp.Models.CourseClass", "CourseClasses")
                        .WithMany("TeachingSchedules")
                        .HasForeignKey("MaLHP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CourseClasses");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("StudentApp.Models.TrainingProgram", b =>
                {
                    b.HasOne("StudentApp.Models.Course", "Courses")
                        .WithMany("TrainingPrograms")
                        .HasForeignKey("MaHP")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("StudentApp.Models.Course", b =>
                {
                    b.Navigation("CourseClasses");

                    b.Navigation("StudyPlans");

                    b.Navigation("TrainingPrograms");
                });

            modelBuilder.Entity("StudentApp.Models.CourseClass", b =>
                {
                    b.Navigation("CourseRegistrations");

                    b.Navigation("Grades");

                    b.Navigation("Schedules");

                    b.Navigation("TeachingSchedules");
                });

            modelBuilder.Entity("StudentApp.Models.Student", b =>
                {
                    b.Navigation("CourseRegistrations");

                    b.Navigation("Grades");

                    b.Navigation("Schedules");
                });

            modelBuilder.Entity("StudentApp.Models.Teacher", b =>
                {
                    b.Navigation("CourseClasses");

                    b.Navigation("TeachingSchedules");
                });
#pragma warning restore 612, 618
        }
    }
}
